@inject IAuthService _authService
<div class="mt-4 mx-5">
    <EditForm class="" Model="@loginModel" OnValidSubmit="LoginAuthenticate" FormName="LoginFrom">
        <DataAnnotationsValidator/>
        <div class="mb-2">
            <label class="ms-3 mb-1 fw-semibold fs-6">
                Email Address
            </label>
            <InputText class="form-control rounded-pill ps-3" @bind-Value="loginModel.Email" placeholder="Enter the Email"/>
        </div>
        <div class="mb-3">
            <label class="ms-3 mb-1 fw-semibold fs-6">
                Password
            </label>
            <InputText type="password" class="form-control rounded-pill ps-3" @bind-Value="loginModel.Password" placeholder="Enter the Password" />
        </div>
        <div class="mb-2 text-center">
            <span class="text-danger">@errorMessage</span>
        </div>
        <div class="d-flex justify-content-center">
            <button type="submit" class="mx-2 btn btn-primary py-2 px-6 rounded-pill text-uppercase">Login</button>
        </div>
    </EditForm>
</div>
@code {
    [Parameter] public EventCallback<string> HandleToken { get; set; }
    private LoginDTO loginModel { get; set; } 
    private string? errorMessage;
    private async Task LoginAuthenticate()
    {
        Response<User> response = await _authService.Login(loginModel);
        if (!response.Succeeded)
        {
            errorMessage = response.Message;
            return;
        }
        loginModel = new LoginDTO();
        await HandleToken.InvokeAsync(response.Token);
    }
}